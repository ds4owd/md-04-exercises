---
title: "Factors"
author: ""
format:
  html:
    embed-resources: true
    toc: true
execute:
  warning: false
editor_options: 
  chunk_output_type: console
editor: visual
---

```{r}
#| label: load-packages
library(ggplot2)
library(dplyr)
library(readr)
library(ggthemes)
```

# Import

```{r}
waste <- read_csv("data/processed/waste-city-level-sml.csv") 
```

# Explore

1.  Run all code chunks above.

2.  Use the `glimpse()` function to inspect the `waste` object.

3.  What does the data cover? Briefly discuss with your room partner.

```{r}

```

1.  Use the `count()` function for the `waste` object to count the number of rows for each value of the `income_id` variable.

2.  What do the four values of the `income_id` variable represent?

```{r}

```

# Transform

1.  Use the `c()` function to create a vector with the following values: "HIC", "UMC", "LMC", "LIC".
2.  Use the assignment operator (`<-`) to store the resulting vector as a new object called `levels_income`.

```{r}

```

1.  Use the `mutate()` function to convert the `income_id` variable to a factor variable with the levels specified in the `levels_income` object.

2.  Use the assignment operator (`<-`) to store the resulting data as a new object called `waste_lvl`.

```{r}

```

1.  Use the `count()` function to verify that the `income_id` variable is now a factor variable with the correct levels.

```{r}

```

1.  Starting with `waste_lvl`, use the `mutate()` function to create a new variable called `generation_kg_capita` that contains the `generation_tons_year` variable divided by the `population` variable and multiplied with 1000.

2.  Use the assignment operator (`<-`) to store the resulting data as a new object called `waste_capita`.

```{r}

```

# Visualize

1.  Next to the code chunk option `#| eval:` change the value from false to true.

2.  Run the code in the code-chunk below to create a boxplot of the `generation_kg_capita` variable by `income_id`.

3.  What do you observe? Discuss with your room partner.

```{r}
#| eval: false
ggplot(data = waste_capita,
       mapping = aes(x = income_id, 
                     y = generation_kg_capita, 
                     color = income_id)) +
  geom_boxplot(outlier.fill = NA) +
  geom_jitter(width = 0.1, alpha = 0.3) +
  scale_color_colorblind() +
  labs(x = "Income group",
       y = "Waste generation (tons per capita per year)")

```

# Communicate

1.  Let's render
